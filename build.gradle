plugins {
    id 'com.github.ben-manes.versions' version '0.28.0'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
    id 'idea'
}

group = 'org.ruaux'
description = 'JDiscogs'
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
}

idea {
    module {
        downloadJavadoc = true
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    implementation 'org.springframework:spring-web'
    api 'com.redislabs:spring-redisearch:2.1.0'
    api 'org.glassfish.jaxb:jaxb-runtime'
    implementation 'com.thoughtworks.xstream:xstream:1.4.12'
    implementation 'com.redislabs:spring-batch-redisearch:2.1.0'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.batch:spring-batch-test'
    testImplementation 'org.hsqldb:hsqldb'
}

test {
    useJUnitPlatform()
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : ''
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : ''
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = 'org.ruaux:jdiscogs'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/jruaux/jdiscogs.git'
        version {
            gpg {
                sign = true
            }
            mavenCentralSync {
                sync = true
                user = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : ''
                password = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : ''
            }
        }
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId 'org.ruaux'
            artifactId 'jdiscogs'

            pom {
                name = 'JDiscogs'
                packaging = 'jar'
                description = 'Java client for Discogs API and Data'
                url = 'https://github.com/jruaux/jdiscogs'

                scm {
                    connection = 'scm:git:git://github.com/jruaux/jdiscogs.git'
                    developerConnection = 'scm:git:git@github.com:jruaux/jdiscogs.git'
                    url = 'https://github.com/jruaux/jdiscogs'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'jruaux'
                        name = 'Julien Ruaux'
                    }
                }
            }
        }
    }
}

afterReleaseBuild.dependsOn bintrayUpload
